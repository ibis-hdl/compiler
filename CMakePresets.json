{
    "version": 8,
    "include": [
        "cmake/presets/compiler.json"
    ],
    "configurePresets": [
        {
            "name": "cmake-conan-provider",
            "hidden": true,
            "cacheVariables": {
                "CMAKE_PROJECT_TOP_LEVEL_INCLUDES": "${sourceDir}/cmake/cmake-conan/conan_provider.cmake"
            }
        },
        {
            "name": "conan-toolchain",
            "description": "Conan toolchain file; run: python3 conan_install.py --profile <conan-profile>",
            "hidden": true,
            "cacheVariables": {
                "CMAKE_TOOLCHAIN_FILE": "${sourceDir}/build/generators/conan_toolchain.cmake"
              }
        },
        {
            "name": "gcc",
            "displayName": "GnuC",
            "description": "GnuC compiler",
            "inherits": [
                "compiler-gcc",
                "condition-linux",
                "ninja-multi-config",
                "conan-toolchain",
                "cmake-default-settings",
                "default-install-settings",
                "default-environment"
            ],
            "cacheVariables": {
                "CMAKE_BUILD_TYPE": "Release"
            }
        },
        {
            "name": "clang",
            "displayName": "Clang",
            "description": "Clang compiler (using GNU libstdc++)",
            "inherits": [
                "compiler-clang",
                "condition-linux-or-macos",
                "ninja-multi-config",
                "conan-toolchain",
                "cmake-default-settings",
                "default-install-settings",
                "default-environment"
            ],
            "cacheVariables": {
                "CMAKE_BUILD_TYPE": "Release"
            }
        },
        {
            "name": "clang-libc++",
            "displayName": "Clang-libc++",
            "description": "Clang compiler (using libc++) - used for Linux 'cross-compiling' only; macOS and FreeBSD use libc++ by default",
            "inherits": [
                "compiler-clang-libc++",
                "condition-linux",
                "ninja-multi-config",
                "conan-toolchain",
                "cmake-default-settings",
                "default-install-settings",
                "default-environment"
            ],
            "cacheVariables": {
                "CMAKE_BUILD_TYPE": "Release"
            }
        },
        {
            "name": "msvc",
            "displayName": "MSVC",
            "description": "Microsoft Visual Studio C++ compiler",
            "inherits": [
                "compiler-msvc",
                "condition-windows",
                "ninja-multi-config",
                "conan-toolchain",
                "cmake-default-settings",
                "default-install-settings",
                "default-environment"
            ],
            "cacheVariables": {
                "CMAKE_BUILD_TYPE": "Release"
            }
        },
        {
            "name": "msvc-cl",
            "displayName": "MSVC-Cl",
            "description": "Microsoft Visual Studio bundled ClangCL C++ compiler",
            "inherits": [
                "compiler-msvc-clang",
                "condition-windows",
                "ninja-multi-config",
                "conan-toolchain",
                "cmake-default-settings",
                "default-install-settings",
                "default-environment"
            ],
            "cacheVariables": {
                "CMAKE_BUILD_TYPE": "Release"
            }
        }      
    ],
    "buildPresets": [
        {
            "name": "gcc-release",
            "displayName": "Release Build",
            "description": "Release build with GnuC",
            "configuration": "Release",
            "configurePreset": "gcc"
        },
        {
            "name": "clang-release",
            "displayName": "Release Build",
            "description": "Release build with Clang",
            "configuration": "Release",
            "configurePreset": "clang"
        },
        {
            "name": "clang-libc++-release",
            "displayName": "Release Build",
            "description": "Release build with Clang libc++",
            "configuration": "Release",
            "configurePreset": "clang-libc++"
        },  
        {
            "name": "msvc-release",
            "displayName": "Release Build",
            "description": "Release build with Microsoft Visual Studio",
            "configuration": "Release",
            "configurePreset": "msvc"
        },
        {
            "name": "msvc-cl-release",
            "displayName": "Release Build",
            "description": "Release build with Microsoft Visual Studio bundled ClangCL C++ compiler",
            "configuration": "Release",
            "configurePreset": "msvc-cl"
        }
    ],
    "testPresets": [
        {
            "name": "gcc-release-test",
            "displayName": "Release Test",
            "description": "Test GnuC build",
            "configuration": "Release",
            "configurePreset": "gcc",
            "inherits": [
                "default-testPreset"
            ]
        },
        {
            "name": "clang-release-test",
            "displayName": "Release Test",
            "description": "Test Clang build",
            "configuration": "Release",
            "configurePreset": "clang",
            "inherits": [
                "default-testPreset"
            ]
        },
        {
            "name": "clang-libc++-release-test",
            "displayName": "Release Test",
            "description": "Test Clang libc++ build",
            "configuration": "Release",
            "configurePreset": "clang-libc++",
            "inherits": [
                "default-testPreset"
            ]
        },
        {
            "name": "msvc-release-test",
            "displayName": "Release Test",
            "description": "Test Microsoft Visual Studio build",
            "configuration": "Release",
            "configurePreset": "msvc",
            "inherits": [
                "default-testPreset"
            ]
        },
        {
            "name": "msvc-cl-release-test",
            "displayName": "Release Test",
            "description": "Test Microsoft Visual Studio bundled ClangCL build",
            "configuration": "Release",
            "configurePreset": "msvc-cl",
            "inherits": [
                "default-testPreset"
            ]
        }
    ],
    "workflowPresets": [
        {
            "name": "Gcc",
            "displayName": "Gcc Release Workflow",
            "description": "GnuC Compiler Release workflow",
            "steps": [
                {
                    "type": "configure",
                    "name": "gcc"
                },
                {
                    "type": "build",
                    "name": "gcc-release"
                },
                {
                    "type": "test",
                    "name": "gcc-release-test"
                }
            ]
        },
        {
            "name": "Clang",
            "displayName": "Clang Release Workflow",
            "description": "Clang Compiler Release workflow",
            "steps": [
                {
                    "type": "configure",
                    "name": "clang"
                },
                {
                    "type": "build",
                    "name": "clang-release"
                },
                {
                    "type": "test",
                    "name": "clang-release-test"
                }
            ]
        },
        {
            "name": "Clang LibC++",
            "displayName": "Clang/LibC++ Release Workflow",
            "description": "Clang with LibC++ Compiler Release workflow",
            "steps": [
                {
                    "type": "configure",
                    "name": "clang-libc++"
                },
                {
                    "type": "build",
                    "name": "clang-libc++-release"
                },
                {
                    "type": "test",
                    "name": "clang-libc++-release-test"
                }
            ]
        },
        {
            "name": "MSVC",
            "displayName": "MSVC++ Release Workflow",
            "description": "MSVC++ Compiler Release workflow",
            "steps": [
                {
                    "type": "configure",
                    "name": "msvc"
                },
                {
                    "type": "build",
                    "name": "msvc-release"
                },
                {
                    "type": "test",
                    "name": "msvc-release-test"
                }
            ]
        }
    ]
}