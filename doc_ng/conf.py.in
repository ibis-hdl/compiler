# Configuration file for the Sphinx documentation builder.
#
# This file only contains a selection of the most common options. For a full
# list see the documentation:
# https://www.sphinx-doc.org/en/master/usage/configuration.html

# -- Path setup --------------------------------------------------------------

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
import os
# import sys
# sys.path.insert(0, os.path.abspath('.'))
import textwrap


# -- Project information -----------------------------------------------------

project = 'TestSuite @CMAKE_PROJECT_NAME@'
copyright = '(c) 2021, Me'
author = 'AuthorName'

# The full version, including alpha/beta/rc tags
release = 'v@ibis_hdl_VERSION@'


# -- General configuration ---------------------------------------------------

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
    'breathe',
    'exhale',
    # ToDo: doesn't work as expected, check https://github.com/svenevs/exhale/issues/88
    'sphinx.ext.todo',
]

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This pattern also affects html_static_path and html_extra_path.
exclude_patterns = []


# -- Options for HTML output -------------------------------------------------

# [Modifying content width of the Sphinx theme 'Read the Docs'](
#  https://stackoverflow.com/questions/23211695/modifying-content-width-of-the-sphinx-theme-read-the-docs)
# Also: [Adding Custom CSS or JavaScript to Sphinx Documentation](
#  https://docs.readthedocs.io/en/latest/guides/adding-custom-css.html)
# Note: [Changed in version 1.8: Renamed app.add_stylesheet()](
#  https://www.sphinx-doc.org/en/master/extdev/appapi.html) to add_css_file()
def setup(app):
    app.add_css_file("main_stylesheet.css")

# [pygments](https://pygments.org/), [Show Example Code](https://sublime-and-sphinx-guide.readthedocs.io/en/latest/code_blocks.html)
pygments_style = 'sphinx'

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
# More themes and their configurations can be found at
# https://www.sphinx-doc.org/en/master/usage/theming.html
#
html_theme = 'sphinx_rtd_theme'

html_theme_options = {
    'canonical_url': '',
    'analytics_id': '',
    'display_version': True,
    'prev_next_buttons_location': 'both',
    'style_external_links': False,

    'logo_only': False,

    # Toc options
    'collapse_navigation': True,
    'sticky_navigation': True,
    'navigation_depth': 4,
    'includehidden': True,
    'titles_only': False
}

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['_static']

# -- Options for Breathe and Exhale -------------------------------------------
def doxy_xml(doxy_output : str):
    """
    Determine relative path from sphinx-build and conf.py to Doxygen's output
    :param [doxy_output]: Absolute path to Doxygen's top level output directory
    :return: The path to Doxygen's XML output, relative to setup.py's path.

    Note [Using pathlib's relative_to for directories on the same level](
    https://stackoverflow.com/questions/38083555/using-pathlibs-relative-to-for-directories-on-the-same-level)
    hence `os.path` is used.
    """
    # my path adjusting looks strange, but works
    me = os.path.join(os.path.dirname(os.path.realpath(__file__)), os.pardir)
    dox = os.path.relpath(me, doxy_output)
    xml = os.path.join(dox, 'doxy_output', 'xml')
    #print('-- doxygen: {dox}, self = {me} => {rel}'.format(dox=doxy_output, me=me, rel=xml))
    return os.fsdecode(xml)


# Setup the breathe extension
breathe_projects = {
    'TestSuite @CMAKE_PROJECT_NAME@': doxy_xml('@DOXYGEN_OUTPUT_DIR@')
}

breathe_default_project = 'TestSuite @CMAKE_PROJECT_NAME@'

# [sphinx.ext.todo](https://www.sphinx-doc.org/en/master/usage/extensions/todo.html)
todo_include_todos = True

# Setup the exhale extension, see
# [Mastering Doxygen](https://exhale.readthedocs.io/en/latest/mastering_doxygen.html)
# FixMe: Exhale doesn't support multiple doxygenStripFromPath entries, e.g. build dir?
exhale_args = {
    # These arguments are required
    "containmentFolder":     "./api",
    "rootFileName":          "testsuite_root.rst",
    "rootFileTitle":         "Testsuite API",
    "doxygenStripFromPath":  "@PROJECT_SOURCE_DIR@",
    # Suggested optional arguments
    "createTreeView":        True,
    # TIP: if using the sphinx-bootstrap-theme, you need
    # "treeViewIsBootstrap": True,
    "exhaleExecutesDoxygen": True,
    "exhaleDoxygenStdin":    textwrap.dedent('''
                            QUIET = YES
                            WARN_LOGFILE = "@DOXYGEN_OUTPUT_DIR@/DoxygenWarningLog.txt"
                            EXCLUDE_PATTERNS = pch*.hpp
                            WARN_IF_UNDOCUMENTED = NO
                            BUILTIN_STL_SUPPORT = YES
                            EXTRACT_ALL = YES
                            INTERNAL_DOCS = YES
                            GENERATE_TODOLIST = YES
                            INPUT = \
                                "@PROJECT_SOURCE_DIR@/testsuite/util/include" \
                                "@PROJECT_SOURCE_DIR@/testsuite/util/src" \
                                "@PROJECT_BINARY_DIR@/testsuite/util/include"
    ''')
}

# Tell sphinx what the primary language being documented is.
primary_domain = 'cpp'

# Tell sphinx what the pygments highlight language should be.
highlight_language = 'cpp'
