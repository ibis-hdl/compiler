name: 'CMake Build/Test'

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # [Manual triggers with workflow_dispatch](
  # https://github.blog/changelog/2020-07-06-github-actions-manual-triggers-with-workflow_dispatch/)
  workflow_dispatch:
  
env:
  CONAN_V2_MODE : 1

jobs:
  build:
    name: Self-hosted Runner
    runs-on: [self-hosted, x64]
    strategy:
      matrix:
        os: [Linux, Windows]
        
        include:
          - os: Linux
            cmake_preset: ci-linux
          - os: Windows
            cmake_preset: ci-windows
    env:
      PYTHON_VERSION: "3.10"

    steps:
    - name: Install basic dependencies on ${{matrix.os}}
      if: matrix.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install --no-install-recommends -y ccache g++-11 clang-14 clang-format clang-tidy gettext

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install Python dependencies like Conan package manager etc.
      run: |
        python -m pip install --upgrade pip
        pip --disable-pip-version-check --no-cache-dir install conan
        conan profile new --detect --force default

    - name: Install CMake and ninja
      uses: lukka/get-cmake@v3.27.7

    - name: Version info of tools used
      run: |
        lsb_release -a
        g++ --version
        clang++ --version
        ccache --version
        python --version
        conan  --version
        cmake --version
        ninja --version

    - name: Checkout Repo
      uses: actions/checkout@v3
      with:
        submodules: true

    - name: Setup ccache Compiler Cache
      if: matrix.os == 'Linux'
      uses: hendrikmuhs/ccache-action@v1.2.2

    - name: Configure and Build
      uses: lukka/run-cmake@v10
      with:
        configurePreset: ${{ matrix.cmake_preset }}
        buildPreset: ${{ matrix.cmake_preset }}

    - name: Build l10n
      if: matrix.os == 'Linux'
      run: |
        cmake --build --preset ${{ matrix.cmake_preset }} --target l10n
      
    - name: Run Unit Test
      run: |
        ctest --preset ${{ matrix.cmake_preset }}
