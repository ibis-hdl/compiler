# [IWYU Mappings](https://github.com/include-what-you-use/include-what-you-use/blob/master/docs/IWYUMappings.md)
[
    # IBIS HDL project specific, obsolete, but for reference
    { include: [ "<ibis/color/detail/ansii_color.hpp>", "private", "<ibis/color/facet.hpp>", "public" ] },
    # locally installed
    { ref: "/usr/share/include-what-you-use/boost-all.imp" },
    # Boost::UTF 1.86
    { include: [ "<boost/preprocessor/arithmetic/dec.hpp>", "private", "<boost/test/unit_test.hpp>", "public" ] },
    { include: [ "<boost/preprocessor/arithmetic/limits/dec_256.hpp>", "private", "<boost/test/unit_test.hpp>", "public" ] },
    { include: [ "<boost/preprocessor/arithmetic/limits/inc_256.hpp>", "private", "<boost/test/unit_test.hpp>", "public" ] },
    { include: [ "<boost/preprocessor/comparison/limits/not_equal_256.hpp>", "private", "<boost/test/unit_test.hpp>", "public" ] },
    { include: [ "<boost/preprocessor/comparison/not_equal.hpp>", "private", "<boost/test/unit_test.hpp>", "public" ] },
    { include: [ "<boost/preprocessor/comparison/not_equal.hpp>", "private", "<boost/test/unit_test.hpp>", "public" ] },
    { include: [ "<boost/preprocessor/control/expr_iif.hpp>", "private", "<boost/test/unit_test.hpp>", "public" ] },
    { include: [ "<boost/preprocessor/control/iif.hpp>", "private", "<boost/test/unit_test.hpp>", "public" ] },
    { include: [ "<boost/preprocessor/detail/limits/auto_rec_256.hpp>", "private", "<boost/test/unit_test.hpp>", "public" ] },
 #  { include: [ "<boost/preprocessor/repetition/for.hpp>", "private", "<boost/test/unit_test.hpp>", "public" ] },
    { include: [ "<boost/preprocessor/logical/bool.hpp>", "private", "<boost/test/unit_test.hpp>", "public" ] },
    { include: [ "<boost/preprocessor/logical/compl.hpp>", "private", "<boost/test/unit_test.hpp>", "public" ] },
    { include: [ "<boost/preprocessor/logical/limits/bool_256.hpp>", "private", "<boost/test/unit_test.hpp>", "public" ] },
    { include: [ "<boost/preprocessor/repetition/detail/limits/for_256.hpp>", "private", "<boost/test/unit_test.hpp>", "public" ] },
    { include: [ "<boost/preprocessor/seq/elem.hpp>", "private", "<boost/test/unit_test.hpp>", "public" ] },
    { include: [ "<boost/preprocessor/seq/enum.hpp>", "private", "<boost/test/unit_test.hpp>", "public" ] },
    { include: [ "<boost/preprocessor/seq/limits/elem_256.hpp>", "private", "<boost/test/unit_test.hpp>", "public" ] },
    { include: [ "<boost/preprocessor/seq/limits/size_256.hpp>", "private", "<boost/test/unit_test.hpp>", "public" ] },
    { include: [ "<boost/preprocessor/seq/size.hpp>", "private", "<boost/test/unit_test.hpp>", "public" ] },
    { include: [ "<boost/preprocessor/tuple/elem.hpp>", "private", "<boost/test/unit_test.hpp>", "public" ] },
    { include: [ "<boost/preprocessor/tuple/limits/to_seq_64.hpp>", "private", "<boost/test/unit_test.hpp>", "public" ] },
    { include: [ "<boost/preprocessor/tuple/to_seq.hpp>", "private", "<boost/test/unit_test.hpp>", "public" ] },
    { include: [ "<boost/preprocessor/variadic/elem.hpp>", "private", "<boost/test/unit_test.hpp>", "public" ] },
    { include: [ "<boost/preprocessor/variadic/limits/elem_64.hpp>", "private", "<boost/test/unit_test.hpp>", "public" ] },
    { include: [ "<boost/test/tools/old/interface.hpp>", "private", "<boost/test/unit_test.hpp>", "public" ] },
    { include: [ "<boost/test/tree/test_unit.hpp>", "private", "<boost/test/unit_test.hpp>", "public" ] },
    { include: [ "<boost/test/unit_test_suite.hpp>", "private", "<boost/test/unit_test.hpp>", "public" ] }
    # template
    #{ include: [ "xxx", "private", "yyy", "public" ] }
]

